{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blog.service.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/preview/preview.component.css","webpack:///./src/app/preview/preview.component.html","webpack:///./src/app/preview/preview.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\n\n// Routes tell the router which view to display when a user clicks a link or pastes a URL into a browser address bar\nconst routes: Routes = [\n  { path: 'edit/:id', component: EditComponent },\n  { path: 'preview/:id', component: PreviewComponent }\n\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, {useHash: true}) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-list></app-list>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { ListComponent } from './list/list.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  title = 'angular-blog';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './list/list.component';\nimport { BlogService } from './blog.service';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    EditComponent,\n    PreviewComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [BlogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class Post {\n  postid: number;\n  created: Date;\n  modified: Date;\n  title: string;\n  body: string;\n\n  constructor(postid, created, modified, title, body) {\n    this.postid = postid;\n    this.created = created;\n    this.modified = modified;\n    this.title = title;\n    this.body = body;\n  }\n\n}\n\nexport class BlogService {\n\n  private posts: Post[];\n  private xmlRequest : XMLHttpRequest = new XMLHttpRequest();\n  private returnPost : Post;\n\n  constructor() {\n\n  }\n\n  // Populate the posts variable with the users posts\n  fetchPosts(username :string)  : void {\n    let self = this;\n      let request = null;\n      request = \"http://localhost:3000/api/\"+encodeURI(username);\n\n      this.posts = [];\n      this.xmlRequest.onreadystatechange = function() {\n       if (self.xmlRequest.readyState == 4){\n         let json_obj = JSON.parse(self.xmlRequest.responseText);\n         for (let i = 0; i < json_obj.length; i++){\n\n\n           var p = new Post(json_obj[i].postid, new Date(json_obj[i].created), new Date(json_obj[i].modified), json_obj[i].title, json_obj[i].body);\n           self.posts.push(p);\n         }\n       }\n       else {\n          return;\n       }\n      };\n      this.xmlRequest.open(\"GET\", request, true);\n      this.xmlRequest.send();\n\n\n\n  }\n\n\n  // Returns posts\n  getPosts(username: string) : Post[]  {\n    return this.posts;\n  }\n\n  // Return post with specified ID\n  getPost(id: number) : Post {\n    for (let i = 0; i < this.posts.length; i++){\n        if (this.posts[i].postid == id){\n          return this.posts[i];\n        }\n    }\n    return null;\n  }\n\n  // Create a new post with a new postid, an empty title and body, and the current creation and modification times,\n  // add it to posts, send a POST request to /api/:username/:postid (after setting up the response event handler),\n  // and return the newly created post.\n  newPost(username: string) : Post {\n    let newPostID = this.getLastPostID() + 1;\n    let newPost = new Post(newPostID, new Date(), new Date(), \"\", \"\");\n    this.posts.push(newPost);\n    let self = this;\n\n    let request = \"http://localhost:3000/api/\"+encodeURI(username)+\"/\"+(newPostID.toString());\n    console.log(\"request URL =\"+request);\n    this.xmlRequest.onreadystatechange = function() {\n      if (self.xmlRequest.readyState == 4 && self.xmlRequest.status == 201){\n        console.log(\"Success with new created post\");\n      }\n      else if (self.xmlRequest.readyState == 4 && self.xmlRequest.status != 201){\n        // delete newly created post from posts\n        // find post with newPostID\n        for (let i = 0; i < self.posts.length; i++){\n           if (self.posts[i].postid == newPostID){\n              self.posts.splice(i, 1);\n           }\n        }\n        console.log(\"There was an error creating the New Post at the server\");\n      }\n\n    };\n    this.xmlRequest.open(\"POST\", request, true); // post request to create new post in database\n    this.xmlRequest.setRequestHeader(\"Content-type\", \"application/json\");\n\n    this.xmlRequest.send(JSON.stringify(newPost));\n    return newPost;\n  }\n\n  getLastPostID() {\n    return this.posts.length;\n  }\n\n  // Delete the post with postid equal to given id\n  deletePost(id: number): void {\n    let token =  document.cookie; // add a check if token is null\n    let username = parseJWT(token).usr;\n\n    // remove post from posts property\n    for (let i = 0; i < this.posts.length; i++){\n       if (this.posts[i].postid == id){\n          this.posts.splice(i,1);\n       }\n    }\n    // send DELETE request to /api/:username/:postid\n    let self = this;\n\n    let request = \"http://localhost:3000/api/\"+encodeURI(username)+\"/\"+id.toString();\n    this.xmlRequest.onreadystatechange = function() {\n      if (self.xmlRequest.readyState == 4 && self.xmlRequest.status == 204){\n        console.log(\"Success deleting the post\");\n      }\n      else if (self.xmlRequest.readyState == 4 && self.xmlRequest.status != 204){\n        console.log(\"There was an error deleting the post at the server\");\n      }\n\n    };\n    this.xmlRequest.open(\"DELETE\", request); // post request to create new post in database\n    this.xmlRequest.send();\n  }\n\n  // From posts, find a post whose postid is the same as post.postid,\n  // update its title and body with the passed-in values,\n  // change its modification time to now,\n  // and send a PUT request to /api/:username/:postid (after setting up the response event handler).\n   // If no such post exists, do nothing.\n\n  // The response event handler should do nothing if the response status code is “200 (OK)”.\n  // Otherwise, it should display an alert message saying that there was an error updating the post at the server,\n  // and navigate to the “edit view” of the post.\n\n\n  updatePost(id: number, post: Post) : void {\n    // find a post whose postid is the same as id and update title and body\n    var post_num = -1;\n    let token =  document.cookie; // add a check if token is null\n    let username = parseJWT(token).usr;\n    for (let i = 0; i < this.posts.length; i++){\n        if (this.posts[i].postid == id){\n            // update title and body with passed in values\n            post_num = i;\n            this.posts[i].title = post.title;\n            this.posts[i].body = post.body;\n\n            this.posts[i].modified = new Date();\n        }\n    }\n    // send a PUT request\n    let self = this;\n    let request = \"http://localhost:3000/api/\"+encodeURI(username)+\"/\"+post.postid.toString();\n    this.xmlRequest.onreadystatechange = function() {\n      if (self.xmlRequest.readyState == 4 && self.xmlRequest.status == 200){\n        console.log(\"Success updating the post\");\n      }\n      else if (self.xmlRequest.readyState == 4 && self.xmlRequest.status != 200){\n        console.log(\"There was an error updating the post at the server\");\n      }\n\n    };\n    this.xmlRequest.open(\"PUT\", request); // post request to create new post in database\n    this.xmlRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    if (post_num != -1){\n      this.xmlRequest.send(JSON.stringify(this.posts[post_num]));\n    }\n\n  }\n\n} //end of BlogService class\n\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1> Edit </h1>\\n\\n<div>Title:</div> <br>\\n<input type=\\\"text\\\" [(ngModel)]=\\\"post.title\\\"><br>\\n​<div>Body:</div><input type=\\\"textarea\\\" [(ngModel)]=\\\"post.body\\\"><br><br>\\n<div>Last Modified: {{post.modified.getMonth()+1}}/{{post.modified.getDate()}}/{{post.modified.getFullYear()}} {{post.modified.getHours()}}:{{post.modified.getMinutes()}}:{{post.modified.getSeconds()}}</div><br>\\n<input type=\\\"submit\\\" value=\\\"Save\\\" (click)=\\\"savePost(post.postid, post)\\\">\\n<input type=\\\"submit\\\" value=\\\"Delete\\\" (click)=\\\"deletePost(post.postid)\\\">\\n<input type=\\\"submit\\\" value=\\\"Preview\\\" (click)=\\\"previewPost(post.postid, post)\\\">\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { Post } from '../blog.service';\nimport { BlogService } from '../blog.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\n\nexport class EditComponent implements OnInit {\n\n  private post: Post; // holds a copy of the post currently being edited\n\n\n  constructor(private blogService : BlogService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(() => this.getPost());\n\n  }\n\n  getPost(){\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.post = this.blogService.getPost(Number(id));\n  }\n\n  deletePost(id: number){\n    this.blogService.deletePost(id);\n    this.router.navigate(['/']);\n  }\n\n  @HostListener('window:beforeunload')\n  savePost(id: number, post: Post) : void{\n    this.blogService.updatePost(id, post);\n  }\n\n  previewPost(id: number, post: Post){\n    this.blogService.updatePost(id, post);\n    this.router.navigate(['/preview/' + id.toString() ]);\n  }\n}\n\n\n\n\n","module.exports = \"/* HeroesComponent's private CSS styles */\\n.selected {\\n  background-color: #CFD8DC !important;\\n  color: white;\\n}\\n.posts {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.posts li {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.posts li.selected:hover {\\n  background-color: #BBD8DC !important;\\n  color: white;\\n}\\n.posts li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.posts .text {\\n  position: relative;\\n  top: -3px;\\n}\\n.posts .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMENBQTBDO0FBQzFDO0VBQ0UscUNBQXFDO0VBQ3JDLGFBQWE7Q0FDZDtBQUNEO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsWUFBWTtDQUNiO0FBQ0Q7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFFBQVE7RUFDUix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsbUJBQW1CO0NBQ3BCO0FBQ0Q7RUFDRSxxQ0FBcUM7RUFDckMsYUFBYTtDQUNkO0FBQ0Q7RUFDRSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLFdBQVc7Q0FDWjtBQUNEO0VBQ0UsbUJBQW1CO0VBQ25CLFVBQVU7Q0FDWDtBQUNEO0VBQ0Usc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsNkJBQTZCO0VBQzdCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxVQUFVO0VBQ1YsY0FBYztFQUNkLG1CQUFtQjtFQUNuQiwyQkFBMkI7Q0FDNUIiLCJmaWxlIjoic3JjL2FwcC9saXN0L2xpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEhlcm9lc0NvbXBvbmVudCdzIHByaXZhdGUgQ1NTIHN0eWxlcyAqL1xuLnNlbGVjdGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0NGRDhEQyAhaW1wb3J0YW50O1xuICBjb2xvcjogd2hpdGU7XG59XG4ucG9zdHMge1xuICBtYXJnaW46IDAgMCAyZW0gMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMTVlbTtcbn1cbi5wb3N0cyBsaSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFO1xuICBtYXJnaW46IC41ZW07XG4gIHBhZGRpbmc6IC4zZW0gMDtcbiAgaGVpZ2h0OiAxLjZlbTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuLnBvc3RzIGxpLnNlbGVjdGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JCRDhEQyAhaW1wb3J0YW50O1xuICBjb2xvcjogd2hpdGU7XG59XG4ucG9zdHMgbGk6aG92ZXIge1xuICBjb2xvcjogIzYwN0Q4QjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RERDtcbiAgbGVmdDogLjFlbTtcbn1cbi5wb3N0cyAudGV4dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtM3B4O1xufVxuLnBvc3RzIC5iYWRnZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiBzbWFsbDtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAwLjhlbSAwLjdlbSAwIDAuN2VtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjA3RDhCO1xuICBsaW5lLWhlaWdodDogMWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IC0xcHg7XG4gIHRvcDogLTRweDtcbiAgaGVpZ2h0OiAxLjhlbTtcbiAgbWFyZ2luLXJpZ2h0OiAuOGVtO1xuICBib3JkZXItcmFkaXVzOiA0cHggMCAwIDRweDtcbn1cbiJdfQ== */\"","module.exports = \"<h1>\\n  Posts\\n</h1>\\n<input type=\\\"submit\\\" value=\\\"New Post\\\" (click)=\\\"newPost()\\\" >\\n<!--<li *ngFor=\\\"let post of posts\\\" (click)=\\\"onSelect(post)\\\">{{post.created}} {{post.title}}</li>-->\\n<ul class=\\\"posts\\\">\\n  <li *ngFor=\\\"let post of posts\\\"\\n    [class.selected]=\\\"post === selectedPost\\\"\\n      routerLink=\\\"/edit/{{post.postid}}\\\">\\n\\n    <span class=\\\"badge\\\">\\n      {{post.created.getMonth()+1}}/{{post.created.getDate()}}/{{post.created.getFullYear()}} {{post.created.getHours()}}:{{post.created.getMinutes()}}:{{post.created.getSeconds()}}\\n    </span> {{post.title}}\\n  </li>\\n</ul>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Post } from '../blog.service';\nimport { BlogService } from '../blog.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\n\n\n\nexport class ListComponent implements OnInit {\n\n  private posts : Post[];\n  private selectedPost : Post;\n  private post : Post;\n  private username : string;\n\n  constructor(private blogService : BlogService, private router: Router) {}\n\n  ngOnInit() {\n    let token =  document.cookie; // add a check if token is null\n    this.username = parseJWT(token).usr;\n\n    this.blogService.fetchPosts(this.username);\n    this.posts = this.blogService.getPosts(this.username);\n\n\n  }\n\n  onSelect(selectedPost: Post){\n    this.selectedPost = selectedPost;\n  }\n\n  newPost(){\n    this.post = this.blogService.newPost(this.username);\n    this.router.navigate(['/edit/' + this.post.postid.toString()]);\n  }\n}\n\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    console.log(base64Url);\n    if (base64Url == undefined){\n      return false;\n    }\n\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZXZpZXcvcHJldmlldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Preview</h1>\\n<input type=\\\"submit\\\" value=\\\"Edit\\\" routerLink=\\\"/edit/{{post.postid}}\\\">\\n<h2 id=\\\"title\\\"></h2>\\n<h3 id=\\\"body\\\"></h3>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Parser, HtmlRenderer } from 'commonmark';\nimport { HostListener } from '@angular/core';\nimport { Post } from '../blog.service';\nimport { BlogService } from '../blog.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.css']\n})\nexport class PreviewComponent implements OnInit {\n\n  private post : Post;\n\n  private resultTitle;\n  private resultBody;\n\n  constructor(private blogService : BlogService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.activatedRoute.paramMap.subscribe(() => this.preview());\n\n  }\n\n  preview(){\n      let id = this.activatedRoute.snapshot.paramMap.get('id');\n      this.post = this.blogService.getPost(Number(id));\n\n\n      // below code is taken from https://github.com/commonmark/commonmark.js\n      var reader = new Parser();\n      var writer = new HtmlRenderer();\n      var parsed = reader.parse(this.post.title);\n      var bodyparsed = reader.parse(this.post.body);\n\n\n      this.resultTitle = writer.render(parsed); // result is a String\n      this.resultBody = writer.render(bodyparsed);\n\n      document.getElementById('title').innerHTML = this.resultTitle;\n      document.getElementById('body').innerHTML = this.resultBody;\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}